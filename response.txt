
We thank the referee for the close reading of the paper and the insightful 
comments.  We provide a response to specific comments from the referee
and ths statistical editor below.

> There are some stylistic issues with the text. I have left comments inline
>  where appropriate.

We have addressed all of the stylistic issues that were raised by the referee.
Here are some responses to the more detailed comments:

Comment on styles:
As it was not related to the section, we removed the first paragraph 
in the APE section that commented on different styles.  However, we
did add a comment in the affiliated package section indicating that
they may have different requirements and structure than the core package. 

Comment on NDData:
At the time of initial development, the developers were not aware of 
any open source packages that would have fit the requirements of NDData.  Since
then, we have been working with different groups (LSST, sunypy) to coordinate
development of the NDData interface as well as assessing other attempts at 
something similar.  There is currently an APE about this under discussion. 

> More generally, given the technical nature of the work being described here,
> I frequently found myself wanting a small code snippet that demonstrated the 
> new/improved functionality of the packages being described. Perhaps the 
> authors could find a way to include short code examples where appropriate, 
> either inline in the paper body or in the appendix.


> Specific issues that need to be corrected: There are some errors in the paper
> (inline comments left where appropriate), for example, Figure 6 has a fairly 
> major issue with either the wrong caption or the wrong figure but I'm sure 
> this is easily addressed. I have left comments throughout the modified 
> 'main.tex' file in the form `\inlinecomment{REVIEWER}{Comment}`

> More generally I have a few comments/concerns:

> Given the title of this paper, I expected to see more discussion by the 
> authors about the inclusivity of their community. An uber-skeptical reader 
> could make the assessment that the Astropy community has a code of conduct
> therefore believes it's inclusive. I suspect that the community is doing 
> much more than this though... So, has any attempt been made by the authors 
> to quantify the inclusivity of the Astropy community? There's a growing 
> literature in the quantitative social sciences studying open source 
> communities that the authors might want to look into: e.g. the work of 
> Gousios http://www.gousios.gr/publications.html and Vasilescu 
> https://cmustrudel.github.io/publications/ come to mind. Some discussion 
> or attempt to quantify the inclusivity is recommended.

We thank the referee for bringing up this important point. After some discussion
within the Astropy community, it became clear that a section regarding inclusion 
is beyond the scope of the current paper. Quantitative analysis of the Astropy 
community demographics is warranted. However, this is a serious undertaking 
beyond the capabilities of our community, and it may require IRB approval. Based 
on the referee's comment, we have established initial contact with the NumFOCUS 
Diversity & Inclusion in Scientific Computing (DISC) program. Results will not 
be available in time for this paper. We have opted to remove "inclusive" from 
the paper title to make room for future study and dialogue.

> The phase 'open development' is used a few times but isn't really defined or 
> connected to the broader open source ecosystem.  What other communities are 
> working in this way? How novel is 'open development' by their assessment? For 
> example, other communities have adopted policies that encourage community 
> contribution - most notable is the Node.js Foundation's contribution policies
> designed to promote 'Healthy Open Source' 
> https://medium.com/the-node-js-collection/healthy-open-source-967fa8be7951 . 
> How does the Astropy community efforts compare to this?


> A number of times I found myself wondering how the Astropy projects decides 
> whether to build their own package or leverage something available in the 
> scientific Python ecosystem? On the face of it it seems like every decision 
> made by the Astropy project to build a new core package only increases the 
> long term cost/overhead of maintaining this functionality. For example, 
> Section 3.5.2 describes `astropy.table` and notes that there's similarities 
> to the pandas package and numpy arrays. The functionality described in 
> `astropy.nddata` also sounds somewhat generic. Some discussion as to why 
> existing community tools (such as pandas) weren't used would be very welcome. 
> In addition, if the answer to this question is that these other tools don't 
> support all of the functionality the Astropy community needs (e.g. ability to
> handle Quantities with units in tables) are any efforts being made by the 
> Astropy community to contribute these changes to packages such as Pandas?

________________________

> Note from statistical editor. 

> In sec 3.11.3, a sentence can be added warning users about difficulties in 
> interpreting the statistical significance of Lomb -Scargle periodogram peaks. 
> This is important because unreliable interpretation is common, and warnings 
> are not given elsewhere (e.g. NASA Exoplanet Archive Periodogram Service). 
> A good reference is Vanderplas 2017 (https://arxiv.org/abs/1703.09824) 
> soon to appear in the ApJ Suppl.

A short note directing the reader to Vanderplas (2007) was included. 
